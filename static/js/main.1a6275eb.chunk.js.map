{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","memo","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","onInputChange","selectFilterType","onChangeFilter","value","onChange","event","target","placeholder","currentTarget","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","todoId","setTodoId","setQuery","debouncedQuery","setDebouncedQuery","setSelectFilterType","debouncedCallback","useCallback","func","clearTimeout","args","debounce","handleInputChange","visibleTodos","useMemo","filter","preparedQuery","toLowerCase","trim","filteredTodos","includes","selectedTodo","find","handleSelectTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a6275eb.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId: number,\n  selectTodo: (id: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodoId === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button is-link\"\n                type=\"button\"\n                onClick={() => selectTodo(0)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React, { memo } from 'react';\n\ninterface Props {\n  query: string,\n  selectFilterType: string,\n  onInputChange: (value: string) => void,\n  onChangeFilter: (str: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  query,\n  onInputChange,\n  selectFilterType,\n  onChangeFilter,\n}) => {\n  const handleClickReset = () => onInputChange('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectFilterType}\n            onChange={(event) => onChangeFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onInputChange(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClickReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo,\n  onCloseModal: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = memo(({\n  todo,\n  onCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst debounce = (\n  func: React.Dispatch<React.SetStateAction<string>>,\n  delay = 500,\n) => {\n  let id = 0;\n\n  return (...args: unknown[]) => {\n    if (id) {\n      clearTimeout(id);\n    }\n\n    id = setTimeout(func, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [selectFilterType, setSelectFilterType] = useState('all');\n\n  const debouncedCallback = useCallback(\n    debounce(setDebouncedQuery, 500),\n    [],\n  );\n\n  const handleInputChange = useCallback((value: string) => {\n    setQuery(value);\n    debouncedCallback(value);\n  }, []);\n\n  const visibleTodos = useMemo(() => todos.filter(todo => {\n    const preparedQuery = debouncedQuery.toLowerCase().trim();\n    const preparedTitle = todo.title.toLowerCase();\n    const filteredTodos = preparedTitle.includes(preparedQuery);\n\n    switch (selectFilterType) {\n      case 'all':\n        return filteredTodos;\n\n      case 'active':\n        return filteredTodos && !todo.completed;\n\n      case 'completed':\n        return filteredTodos && todo.completed;\n\n      default:\n        return true;\n    }\n  }), [debouncedQuery, todos]);\n\n  const selectedTodo = useMemo(() => todos.find(todo => todo.id === todoId), [todoId]);\n  const handleSelectTodo = useCallback((id: number) => setTodoId(id), []);\n  const onCloseModal = useCallback(() => setTodoId(0), []);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                selectFilterType={selectFilterType}\n                onChangeFilter={setSelectFilterType}\n                onInputChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={todoId}\n                  selectTodo={handleSelectTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onCloseModal={onCloseModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}